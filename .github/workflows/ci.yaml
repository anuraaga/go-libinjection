name: CI
on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        mode:
          - cgo
          - tinygo
          - wazero
        os:
          - macos-12
          - ubuntu-22.04
          - windows-2022
        exclude:
          - os: windows-2022
            mode: cgo
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '^1.18.8'
          cache: true

      - name: setup autotools for cgo
        if: ${{ matrix.mode == 'cgo' && startsWith(matrix.os, 'macos-') }}
        run: brew install autoconf automake libtool

      - name: setup libinjection for cgo
        if: ${{ matrix.mode == 'cgo' }}
        run: |
          wget https://github.com/libinjection/libinjection/archive/4d66612db53594df5fda4e1ee8a382f32109644d.tar.gz
          tar -xf 4d66612db53594df5fda4e1ee8a382f32109644d.tar.gz
          cd libinjection-4d66612db53594df5fda4e1ee8a382f32109644d
          ./autogen.sh
          ./configure
          make
          sudo make install
        working-directory: /tmp

      - name: setup tinygo
        if: ${{ matrix.mode == 'tinygo' }}
        uses: acifani/setup-tinygo@v1
        with:
          tinygo-version: 0.27.0
      - name: setup wasmtime for tinygo
        if: ${{ matrix.mode == 'tinygo' }}
        run: go install github.com/wasilibs/tools/cmd/wasmtime@c93d2e477ab3c1eb7f5303c66a35c84a21d06dbd

      - run: go run mage.go check
        env:
          WASI_TEST_MODE: ${{ matrix.mode }}
          LD_LIBRARY_PATH: ${{ startsWith(matrix.os, 'ubuntu-') && matrix.mode == 'cgo' && '/usr/local/lib' || '' }}

  # Runs tests using wazero inside a minimal golang docker image. This makes sure the code builds
  # even when there is no C toolchain available. It is possible for code to work fine with CGO_ENABLED=0
  # but not build without a C toolchain available, e.g. if C source files are checked into the repo
  # without a build tag to exclude them from pure-Go builds.
  docker-build:
    runs-on: ubuntu-22.04
    container:
      image: golang:alpine
    steps:
      - uses: actions/checkout@v3

      - run: if command -v gcc &> /dev/null; then echo "GCC found but not expected"; exit 321; fi

      - run: go run mage.go test
